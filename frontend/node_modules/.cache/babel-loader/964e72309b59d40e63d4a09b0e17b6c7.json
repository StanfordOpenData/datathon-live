{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Documents\\\\datathon-live\\\\frontend\\\\src\\\\components\\\\datathon-events.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Row, Col, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport devpost from \"../Images/devpost.svg\";\nimport slack from \"../Images/slack.svg\";\nimport drive from \"../Images/drive.svg\";\nimport dayjs from \"dayjs\";\nimport { dates, events } from \"./content.json\";\nimport api from \"../global/api.js\";\n\nfunction Zoom(selectedDialog) {\n  if (selectedDialog.zoom) {\n    console.log(selectedDialog);\n    return /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: selectedDialog.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }\n    }, \"Zoom Link\"));\n  }\n\n  return null;\n}\n\nfunction Links() {\n  const [slackNotifs, setSlackNotifs] = useState([]);\n  const [selectedDialog, setSelectedDialog] = useState({\n    eventId: null\n  });\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [selectedDate, setSelectedDate] = useState({\n    date: \"\",\n    id: null\n  });\n\n  const retrieveSlackAnnouncements = () => {\n    api.get(\"/slackAnnouncements\").then(res => {\n      setSlackNotifs(res.data.filter(item => item.type !== \"system\"));\n    }).catch(err => console.log(err));\n  };\n\n  const toggleDateSelect = (date, id) => {\n    setSelectedDate({\n      date: date,\n      id: id\n    });\n  };\n\n  const renderDialogBox = event => {\n    console.log(\"CLICKED DILOG BOX:@!!\");\n    setSelectedDialog({\n      title: event.title,\n      description: event.description,\n      zoom: event.zoom\n    });\n    setShow(true);\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  };\n\n  useEffect(() => {\n    retrieveSlackAnnouncements();\n  }, []);\n  console.log(selectedDate);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"link-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"section-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Datathon Events\"), /*#__PURE__*/React.createElement(Container, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainTitles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Announcements\"), /*#__PURE__*/React.createElement(AnnouncementContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, slackNotifs.map(notif => {\n    return /*#__PURE__*/React.createElement(SlackNotif, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AnnouncementTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Announcement\"), /*#__PURE__*/React.createElement(SlackDateDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, dayjs(notif.timestamp * 1000).format(\"MM/DD/YYYY\")), /*#__PURE__*/React.createElement(SlackNotifDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, notif.text));\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    style: {\n      height: 600,\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainTitles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Upcoming Events\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflow: \"scroll\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      padding: \"0px 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, dates.map(date => {\n    return /*#__PURE__*/React.createElement(DateCard, {\n      key: date.id,\n      selectedDate: selectedDate.id,\n      isSelected: selectedDate.date === date ? true : false,\n      onClick: () => toggleDateSelect(date.date, date.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, date.date);\n  })), /*#__PURE__*/React.createElement(EventCardContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, events.map(event => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventCard, {\n      key: event.id,\n      onClick: () => {\n        console.log(\"render dialog here\");\n        renderDialogBox(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, event.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, event.date), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, event.time)));\n  })))))), /*#__PURE__*/React.createElement(Modal, {\n    style: {\n      marginTop: 300\n    },\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, selectedDialog.title)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, selectedDialog.description), /*#__PURE__*/React.createElement(Zoom, Object.assign({}, selectedDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n}\n\nexport default Links;\nconst MainTitles = styled.div`\n  color: rgba(102, 198, 177, 1);\n  line-height: 100%;\n  font-size: 30px;\n  font-weight: bold;\n  font-style: normal;\n  font-family: Sora;\n  margin-bottom: 30px;\n`;\nconst AnnouncementContainer = styled.div`\n  flex: 1;\n  min-height: 92%;\n  background-color: #e1f4fd;\n  border-radius: 20px;\n  padding-bottom: 20px;\n  overflow: scroll;\n  margin-bottom: 20px;\n`;\nconst AnnouncementTitle = styled.h1`\n  font-size: 20px;\n  line-height: 25px;\n  font-weight: bold;\n  font-style: normal;\n  font-family: Sora;\n  color: rgba(0, 43, 82, 1);\n  margin-bottom: 3px;\n`;\nconst SlackNotif = styled.div`\n  padding-left: 30px;\n  padding-bottom: 15px;\n  padding-top: 15px;\n`;\nconst SlackDateDisplay = styled.div`\n  color: rgba(28, 117, 188, 1);\n  line-height: 25px;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  padding: 0px;\n  margin: 5px 0px;\n`;\nconst SlackNotifDescription = styled.div`\n  font-size: 16px;\n  color: rgba(0, 0, 0, 1);\n`;\nconst DateCard = styled.div`\n  padding: 10px 20px;\n  border: 1px solid #e1f4fd;\n  color: #e1f4fd;\n  margin-right: 10px;\n  border-radius: 3px;\n  margin-bottom: 10px;\n  ${({\n  selectedDate,\n  isSelected\n}) => {\n  console.log(\"SELECTED!\");\n\n  if (selectedDate && isSelected) {\n    console.log(\"selected: \", selectedDate);\n    return `background-color: purple`;\n  }\n}}\n  }\n`;\nconst EventCard = styled.div`\n  background-color: #f4f4f4;\n  padding: 10px 15px;\n  margin: 0px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n`;\nconst EventCardContainer = styled.div`\n  padding: 10px 5px;\n  border-radius: 10px;\n  overflow-y: scroll;\n`;","map":{"version":3,"sources":["C:/Users/Daniel/Documents/datathon-live/frontend/src/components/datathon-events.jsx"],"names":["React","useEffect","useState","Button","Container","Row","Col","Modal","styled","dayjs","dates","events","api","Zoom","selectedDialog","zoom","console","log","Links","slackNotifs","setSlackNotifs","setSelectedDialog","eventId","show","setShow","handleClose","handleShow","selectedDate","setSelectedDate","date","id","retrieveSlackAnnouncements","get","then","res","data","filter","item","type","catch","err","toggleDateSelect","renderDialogBox","event","title","description","display","justifyContent","map","notif","timestamp","format","text","height","flexDirection","overflow","flex","padding","time","marginTop","MainTitles","div","AnnouncementContainer","AnnouncementTitle","h1","SlackNotif","SlackDateDisplay","SlackNotifDescription","DateCard","isSelected","EventCard","EventCardContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Container, Row, Col, Modal } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport devpost from \"../Images/devpost.svg\";\r\nimport slack from \"../Images/slack.svg\";\r\nimport drive from \"../Images/drive.svg\";\r\nimport dayjs from \"dayjs\";\r\nimport { dates, events } from \"./content.json\"\r\n\r\nimport api from \"../global/api.js\";\r\n\r\nfunction Zoom(selectedDialog) {\r\n  if (selectedDialog.zoom) {\r\n    console.log(selectedDialog);\r\n    return (\r\n      <Modal.Body><a href={selectedDialog.zoom}>Zoom Link</a></Modal.Body>\r\n    )\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction Links() {\r\n  const [slackNotifs, setSlackNotifs] = useState([]);\r\n  const [selectedDialog, setSelectedDialog] = useState({\r\n    eventId: null,\r\n  });\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [selectedDate, setSelectedDate] = useState({\r\n    date: \"\",\r\n    id: null,\r\n  });\r\n\r\n  const retrieveSlackAnnouncements = () => {\r\n    api\r\n      .get(\"/slackAnnouncements\")\r\n      .then((res) => {\r\n        setSlackNotifs(res.data.filter((item) => item.type !== \"system\"));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const toggleDateSelect = (date, id) => {\r\n    setSelectedDate({ date: date, id: id });\r\n  };\r\n\r\n  const renderDialogBox = (event) => {\r\n    console.log(\"CLICKED DILOG BOX:@!!\");\r\n    setSelectedDialog({ title: event.title, description: event.description, zoom: event.zoom });\r\n    setShow(true);\r\n    return <></>;\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveSlackAnnouncements();\r\n  }, []);\r\n\r\n  console.log(selectedDate);\r\n  return (\r\n    <div id=\"link-section\">\r\n      <h2 class=\"section-heading\">Datathon Events</h2>\r\n      <Container style={{}}>\r\n        <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Col xs={12} md={6}>\r\n            <MainTitles>Announcements</MainTitles>\r\n            <AnnouncementContainer>\r\n              {slackNotifs.map((notif) => {\r\n                return (\r\n                  <SlackNotif>\r\n                    <AnnouncementTitle>Announcement</AnnouncementTitle>\r\n                    <SlackDateDisplay>\r\n                      {dayjs(notif.timestamp * 1000).format(\"MM/DD/YYYY\")}\r\n                    </SlackDateDisplay>\r\n                    <SlackNotifDescription>{notif.text}</SlackNotifDescription>\r\n                  </SlackNotif>\r\n                );\r\n              })}\r\n            </AnnouncementContainer>\r\n          </Col>\r\n          <Col\r\n            xs={12}\r\n            md={6}\r\n            style={{\r\n              height: 600,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <MainTitles>Upcoming Events</MainTitles>\r\n\r\n            <div style={{ overflow: \"scroll\", flex: 1 }}>\r\n              <Row\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  padding: \"0px 20px\",\r\n                }}\r\n              >\r\n                {dates.map((date) => {\r\n                  return (\r\n                    <DateCard\r\n                      key={date.id}\r\n                      selectedDate={selectedDate.id}\r\n                      isSelected={selectedDate.date === date ? true : false}\r\n                      onClick={() => toggleDateSelect(date.date, date.id)}\r\n                    >\r\n                      {date.date}\r\n                    </DateCard>\r\n                  );\r\n                })}\r\n              </Row>\r\n              <EventCardContainer>\r\n                {events.map((event) => {\r\n                  return (\r\n                    <>\r\n                      <EventCard\r\n                        key={event.id}\r\n                        onClick={() => {\r\n                          console.log(\"render dialog here\");\r\n                          renderDialogBox(event);\r\n                        }}\r\n                      >\r\n                        <div>{event.title}</div>\r\n                        <div>{event.date}</div>\r\n                        <div>{event.time}</div>\r\n                      </EventCard>\r\n                    </>\r\n                  );\r\n                })}\r\n              </EventCardContainer>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal style={{ marginTop: 300 }} show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{selectedDialog.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{selectedDialog.description}</Modal.Body>\r\n        <Zoom {...selectedDialog}></Zoom>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n\r\nconst MainTitles = styled.div`\r\n  color: rgba(102, 198, 177, 1);\r\n  line-height: 100%;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  font-style: normal;\r\n  font-family: Sora;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst AnnouncementContainer = styled.div`\r\n  flex: 1;\r\n  min-height: 92%;\r\n  background-color: #e1f4fd;\r\n  border-radius: 20px;\r\n  padding-bottom: 20px;\r\n  overflow: scroll;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AnnouncementTitle = styled.h1`\r\n  font-size: 20px;\r\n  line-height: 25px;\r\n  font-weight: bold;\r\n  font-style: normal;\r\n  font-family: Sora;\r\n  color: rgba(0, 43, 82, 1);\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst SlackNotif = styled.div`\r\n  padding-left: 30px;\r\n  padding-bottom: 15px;\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst SlackDateDisplay = styled.div`\r\n  color: rgba(28, 117, 188, 1);\r\n  line-height: 25px;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  padding: 0px;\r\n  margin: 5px 0px;\r\n`;\r\n\r\nconst SlackNotifDescription = styled.div`\r\n  font-size: 16px;\r\n  color: rgba(0, 0, 0, 1);\r\n`;\r\n\r\nconst DateCard = styled.div`\r\n  padding: 10px 20px;\r\n  border: 1px solid #e1f4fd;\r\n  color: #e1f4fd;\r\n  margin-right: 10px;\r\n  border-radius: 3px;\r\n  margin-bottom: 10px;\r\n  ${({ selectedDate, isSelected }) => {\r\n    console.log(\"SELECTED!\");\r\n    if (selectedDate && isSelected) {\r\n      console.log(\"selected: \", selectedDate);\r\n      return `background-color: purple`;\r\n    }\r\n  }}\r\n  }\r\n`;\r\nconst EventCard = styled.div`\r\n  background-color: #f4f4f4;\r\n  padding: 10px 15px;\r\n  margin: 0px;\r\n  border-radius: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst EventCardContainer = styled.div`\r\n  padding: 10px 5px;\r\n  border-radius: 10px;\r\n  overflow-y: scroll;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}